spring:
  application:
    name: order-management-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/db_order}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
  cloud:
    stream:
      bindings:
        orderEvents-out-0:
          destination: order.events
        paymentEvents-in-0:
          destination: payment.events
      rabbit:
        bindings:
          orderEvents-out-0:
            producer:
              routing-key-expression: "'order.' + payload.status"
          paymentEvents-in-0:
            consumer:
              binding-routing-key: payment.#

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true 